{
  "devDependencies": {
    "@types/chai": "^4",
    "@types/chai-as-promised": "^7",
    "@types/chai-things": "^0.0.34",
    "@types/glob": "^7",
    "@types/mocha": "^7",
    "@types/mock-fs": "^4.10.0",
    "@types/node": "^13",
    "@types/pino": "^6",
    "@types/sinon": "^9",
    "@types/sinon-chai": "^3.2.4",
    "@types/vscode": "^1.40.0",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "chai-things": "^0.2.0",
    "glob": "^7.1.4",
    "mocha": "^7",
    "mock-fs": "^4.11.0",
    "nyc": "^15",
    "pino-pretty": "^4",
    "prettier": "^2",
    "sinon": "^9",
    "sinon-chai": "^3.5.0",
    "ts-mock-imports": "^1.2.6",
    "tslint": "^6",
    "tslint-config-prettier": "^1.18.0",
    "typedoc": "^0.17",
    "typescript": "^3.8",
    "vsce": "^1.74",
    "vscode-extension-tester": "^3",
    "vscode-extension-tester-native": "^3",
    "vscode-test": "^1"
  },
  "dependencies": {
    "config-ini-parser": "^1.3",
    "keytar": "^5",
    "open-build-service-api": "https://github.com/SUSE/open-build-service-api.git",
    "pino": "^6",
    "xml2js": "^0.4.23"
  },
  "_comment": "FIXME: need to drag in config-ini-parser and xml2js in from obs-ts, remove this once obs-ts has been properly released",
  "scripts": {
    "doc:devel": "typedoc --mode modules --theme minimal --exclude \"src/test/**\" --out ./documentation src/",
    "package": "vsce package --yarn",
    "cleandeps": "rm -rf node_modules/",
    "clean": "rm -rf ./out ./coverage *vsix ./nyc_output ./documentation ./test-resources ./mocklibsecret/build/",
    "coverage": "COVERAGE=1 ./runTests.sh && echo \"COVERAGE: $(cat coverage/coverage-summary.json | jq .total.lines.pct) %\"",
    "test:ui": "yarn run compile && yarn run mockLibsecret && LD_PRELOAD=./mocklibsecret/build/libsecret.so node ./out/ui-tests/runTests.js",
    "mockLibsecret": "[ -e ./mocklibsecret/build/libsecret.so ] || (mkdir -p mocklibsecret/build && pushd mocklibsecret/build && meson .. && ninja)",
    "test:ui:old": "yarn run compile && extest setup-and-run --yarn './out/test-hooks/**/*.js'",
    "precoverage": "yarn run compile",
    "test": "./runTests.sh",
    "pretest": "yarn run compile",
    "watch": "tsc -watch -p ./",
    "compile": "tsc -p ./",
    "lint": "tslint --project ./tsconfig.json --force --format verbose \"src/**/*.ts\"",
    "format": "prettier --write \"src/**/*.ts\"",
    "vscode:prepublish": "yarn run compile"
  },
  "contributes": {
    "menus": {
      "view/item/context": [
        {
          "when": "view == bookmarkedProjectsTree && viewItem == project",
          "command": "vscodeObs.obsProject.removeBookmark"
        },
        {
          "group": "inline",
          "when": "view == bookmarkedProjectsTree && viewItem == project",
          "command": "vscodeObs.obsProject.updateProject"
        },
        {
          "group": "inline",
          "when": "view == currentProjectTree && viewItem == project",
          "command": "vscodeObs.obsProject.updateProject"
        },
        {
          "group": "inline",
          "when": "view == currentProjectTree && viewItem == localProject",
          "command": "vscodeObs.obsProject.updateCheckedOutProject"
        },
        {
          "group": "inline",
          "when": "view == bookmarkedProjectsTree && viewItem == package",
          "command": "vscodeObs.obsProject.updatePackage"
        },
        {
          "group": "inline",
          "when": "view == repositoryTree && viewItem == architectureRoot",
          "command": "obsRepository.addArchitecturesToRepo"
        },
        {
          "group": "inline",
          "when": "view == repositoryTree && viewItem == architecture",
          "command": "obsRepository.removeArchitectureFromRepo"
        },
        {
          "group": "inline",
          "when": "view == repositoryTree && viewItem == repositoryRoot",
          "command": "obsRepository.removeRepository"
        },
        {
          "group": "inline",
          "when": "view == repositoryTree && viewItem == pathRoot",
          "command": "obsRepository.addPathToRepo"
        },
        {
          "group": "inline",
          "when": "view == repositoryTree && viewItem == repositoryPath",
          "command": "obsRepository.removePathFromRepo"
        }
      ],
      "editor/title": [
        {
          "command": "vscodeObs.obsScm.showDiffFromUri",
          "group": "navigation"
        },
        {
          "command": "vscodeObs.obsScm.setCurrentPackageFromEditor",
          "group": "navigation"
        }
      ],
      "view/title": [
        {
          "group": "navigation",
          "when": "view == repositoryTree",
          "command": "obsRepository.addRepositoryFromDistro"
        }
      ],
      "scm/title": [
        {
          "command": "vscodeObs.obsScm.commitChanges",
          "when": "scmProvider == obs",
          "group": "inline"
        }
      ],
      "scm/change/title": [
        {
          "command": "vscodeObs.obsScm.revertChange"
        }
      ],
      "scm/resourceState/context": [
        {
          "command": "vscodeObs.obsScm.showDiff",
          "when": "scmProvider == obs && scmResourceGroup == changes",
          "group": "inline"
        },
        {
          "command": "vscodeObs.obsScm.discardChanges",
          "when": "scmProvider == obs && scmResourceGroup == changes",
          "group": "inline"
        },
        {
          "command": "vscodeObs.obsScm.addFile",
          "when": "scmProvider == obs && scmResourceGroup == untracked",
          "group": "inline"
        }
      ]
    },
    "commands": [
      {
        "icon": "$(remove)",
        "title": "Remove this Bookmark",
        "command": "vscodeObs.obsProject.removeBookmark"
      },
      {
        "icon": "media/ic_export_import.svg",
        "title": "Import accounts from osc's configuration file",
        "command": "vscodeObs.obsAccount.importAccountsFromOsrc"
      },
      {
        "title": "Set the password of a Build Service Account",
        "command": "vscodeObs.obsAccount.setAccountPassword"
      },
      {
        "icon": "$(remove)",
        "title": "Remove an account from the settings",
        "command": "vscodeObs.obsAccount.removeAccount"
      },
      {
        "title": "Add an existing account from the Open Build Service to the extension",
        "command": "vscodeObs.obsAccount.newAccountWizard"
      },
      {
        "icon": "media/add.svg",
        "title": "Bookmark a project from the Open Build Service",
        "command": "vscodeObs.obsProject.bookmarkProject"
      },
      {
        "icon": "$(add)",
        "title": "Add architectures to a repository",
        "command": "obsRepository.addArchitecturesToRepo"
      },
      {
        "icon": "$(remove)",
        "title": "Remove this architecture from the repository",
        "command": "obsRepository.removeArchitectureFromRepo"
      },
      {
        "icon": "$(add)",
        "title": "Add a path from a Project to a repository",
        "command": "obsRepository.addPathToRepo"
      },
      {
        "icon": "$(remove)",
        "title": "Remove this path from the repository",
        "command": "obsRepository.removePathFromRepo"
      },
      {
        "icon": "$(close)",
        "title": "Remove this repository",
        "command": "obsRepository.removeRepository"
      },
      {
        "icon": "$(add)",
        "title": "Add a repository from a Distribution",
        "command": "obsRepository.addRepositoryFromDistro"
      },
      {
        "icon": "$(refresh)",
        "title": "Update this Project",
        "command": "vscodeObs.obsProject.updateProject"
      },
      {
        "icon": "$(refresh)",
        "title": "Refresh this Project",
        "command": "vscodeObs.obsProject.updateCheckedOutProject"
      },
      {
        "icon": "$(refresh)",
        "title": "Update this Package and its content",
        "command": "vscodeObs.obsProject.updatePackage"
      },
      {
        "command": "vscodeObs.obsScm.revertChange",
        "title": "Revert this change",
        "icon": "$(discard)",
        "when": "scmProvider == obs"
      },
      {
        "command": "vscodeObs.obsScm.commitChanges",
        "title": "Commit the current changes",
        "icon": "$(check)",
        "when": "scmProvider == obs"
      },
      {
        "command": "vscodeObs.obsScm.showDiff",
        "title": "Show the differences to the last commit",
        "icon": "$(git-compare)",
        "when": "scmProvider == obs"
      },
      {
        "command": "vscodeObs.obsScm.showDiffFromUri",
        "title": "Show the differences to the last commit",
        "icon": "$(git-compare)",
        "when": "scmProvider == obs"
      },
      {
        "command": "vscodeObs.obsScm.addFile",
        "title": "Add this file",
        "icon": "$(add)",
        "when": "scmProvider == obs"
      },
      {
        "command": "vscodeObs.obsScm.removeFile",
        "title": "Remove this file",
        "icon": "$(remove)",
        "when": "scmProvider == obs"
      },
      {
        "command": "vscodeObs.obsScm.discardChanges",
        "title": "Discard Changes",
        "icon": "$(discard)",
        "when": "scmProvider == obs"
      },
      {
        "command": "vscodeObs.obsScm.setCurrentPackageFromEditor",
        "title": "Show the history of this package",
        "icon": "$(history)",
        "when": "scmProvider == obs"
      }
    ],
    "views": {
      "obs-tree-view": [
        {
          "name": "Bookmarked Projects",
          "id": "bookmarkedProjectsTree"
        },
        {
          "name": "Current Project",
          "id": "currentProjectTree"
        },
        {
          "name": "Repositories",
          "id": "repositoryTree"
        }
      ],
      "scm": [
        {
          "name": "Package History",
          "id": "packageScmHistoryTree"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "icon": "media/obs-logo.svg",
          "title": "Open Build Service Project",
          "id": "obs-tree-view"
        }
      ]
    },
    "configuration": {
      "properties": {
        "vscode-obs.logLevel": {
          "default": "info",
          "enum": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ],
          "description": "Logging level used",
          "type": "string"
        },
        "vscode-obs.checkUnimportedAccounts": {
          "scope": "application",
          "default": true,
          "description": "Specify whether the extension will check for accounts in your .oscrc that have not been imported into VSCode",
          "type": "boolean"
        },
        "vscode-obs.forceHttps": {
          "scope": "application",
          "default": true,
          "description": "Define whether URLs to the Buildservice must use https, or whether http is permitted as well",
          "type": "boolean"
        },
        "vscode-obs.accounts": {
          "description": "Accounts for instances of the Open Build Service",
          "default": [],
          "scope": "application",
          "items": {
            "required": [
              "accountName",
              "username",
              "apiUrl"
            ],
            "additionalProperties": false,
            "properties": {
              "email": {
                "type": "string",
                "description": "Your email address, that will be added to changelogs"
              },
              "realname": {
                "type": "string",
                "description": "Your real name, which will be added to changelogs"
              },
              "username": {
                "type": "string",
                "description": "Username on the Open Build Service instance"
              },
              "apiUrl": {
                "type": "string",
                "description": "URL to the API of this instance of the Open Build Service. Note that this is **not** the URL to the web UI, but often https://api.MYINSTANCE.org/."
              },
              "accountName": {
                "description": "A name (memorable) for this account",
                "type": "string"
              },
              "serverCaCertificate": {
                "description": "CA certificate of the server, if it has a custom certificate unknown to VSCode.",
                "type": "string"
              }
            },
            "description": "An account for an instance of the Open Build Service",
            "type": "object"
          },
          "type": "array"
        }
      },
      "title": "Open Build Service"
    }
  },
  "main": "./out/extension.js",
  "activationEvents": [
    "onView:bookmarkedProjectsTree",
    "onView:currentProjectTree",
    "onView:repositoryTree",
    "workspaceContains:**/.osc",
    "workspaceContains:**/.osc_obs_ts"
  ],
  "categories": [
    "Other"
  ],
  "engines": {
    "vscode": "^1.40.0"
  },
  "prettier": {
    "trailingComma": "none"
  },
  "repository": "https://github.com/SUSE/open-build-service-connector",
  "license": "MIT",
  "publisher": "SUSE",
  "version": "0.0.1",
  "description": "Connector to the Open Build Service",
  "displayName": "Open Build Service Connector",
  "name": "open-build-service-connector"
}
