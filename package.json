{
  "devDependencies": {
    "@types/chai": "^4",
    "@types/chai-as-promised": "^7",
    "@types/chai-things": "^0.0.34",
    "@types/glob": "^7",
    "@types/mocha": "^8",
    "@types/mock-fs": "^4.10.0",
    "@types/node": "^14",
    "@types/pino": "^6",
    "@types/sinon": "^9",
    "@types/sinon-chai": "^3.2.4",
    "@types/vscode": "^1.40.0",
    "@typescript-eslint/eslint-plugin": "^4",
    "@typescript-eslint/parser": "^4",
    "awesome-node-loader": "^1.1.1",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "chai-things": "^0.2.0",
    "eslint": "^7",
    "glob": "^7.1.4",
    "mocha": "^8",
    "mock-fs": "^4.11.0",
    "nyc": "^15",
    "pino-pretty": "^4",
    "prettier": "^2",
    "sinon": "^9",
    "sinon-chai": "^3.5.0",
    "ts-loader": "^8.0.11",
    "ts-mock-imports": "^1.2.6",
    "typedoc": ">=0.17",
    "typescript": ">=3.8",
    "vsce": "^1.74",
    "vscode-extension-tester": "^3",
    "vscode-extension-tester-native": "^3",
    "vscode-test": "^1",
    "webpack": "^5.9.0",
    "webpack-cli": "^4.2.0"
  },
  "dependencies": {
    "config-ini-parser": "^1.3",
    "keytar": "^7",
    "open-build-service-api": "https://github.com/SUSE/open-build-service-api.git",
    "pino": "^6",
    "xml2js": "^0.4.23"
  },
  "scripts": {
    "doc:devel": "typedoc --mode modules --theme minimal --exclude \"src/test/**\" --exclude \"src/ui-tests/**\" --out ./documentation src/ doc/",
    "package": "vsce package --yarn",
    "webpack": "webpack --mode development",
    "webpack-dev": "webpack --mode development --watch",
    "test-compile": "tsc -p ./",
    "cleandeps": "rm -rf node_modules/",
    "clean": "rm -rf ./out ./coverage *vsix ./nyc_output ./documentation ./test-resources/ ./mocklibsecret/build/ ./.vscode-test/ ./src/ui-tests/repositoryTreeView/fakeHome/",
    "coverage": "COVERAGE=1 ./runTests.sh && echo \"COVERAGE: $(cat coverage/coverage-summary.json | jq .total.lines.pct) %\"",
    "test:ui": "./runUiTests.sh",
    "mockLibsecret": "[ -e ./mocklibsecret/build/libsecret.so ] || (mkdir -p mocklibsecret/build && cd mocklibsecret/build && meson .. && ninja)",
    "precoverage": "yarn run compile",
    "test": "./runTests.sh",
    "pretest": "yarn run compile",
    "watch": "tsc -watch -p ./",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext .js,.jsx,.ts,.tsx",
    "format": "prettier --write \"src/**/*.ts\"",
    "vscode:prepublish": "webpack --mode production"
  },
  "contributes": {
    "menus": {
      "view/item/context": [
        {
          "when": "view == bookmarkedProjectsTree && viewItem == project",
          "command": "vscodeObs.obsProject.removeBookmark"
        },
        {
          "group": "inline",
          "when": "view == bookmarkedProjectsTree && viewItem == project",
          "command": "vscodeObs.obsProject.updateProject"
        },
        {
          "group": "inline",
          "when": "view == currentProjectTree && viewItem == project",
          "command": "vscodeObs.obsProject.updateProject"
        },
        {
          "group": "inline",
          "when": "view == currentProjectTree && viewItem == localProject",
          "command": "vscodeObs.obsProject.updateCheckedOutProject"
        },
        {
          "group": "inline",
          "when": "view == bookmarkedProjectsTree && viewItem == package",
          "command": "vscodeObs.obsProject.updatePackage"
        },
        {
          "when": "view == bookmarkedProjectsTree && viewItem == package",
          "command": "vscodeObs.obsProject.branchAndBookmarkAndCheckoutPackage"
        },
        {
          "when": "view == bookmarkedProjectsTree && viewItem == package",
          "command": "vscodeObs.obsProject.submitPackage"
        },
        {
          "group": "inline",
          "when": "view == bookmarkedProjectsTree && viewItem == package",
          "command": "vscodeObs.obsProject.checkOutPackage"
        },
        {
          "group": "inline",
          "when": "view == bookmarkedProjectsTree && viewItem == project",
          "command": "vscodeObs.obsProject.checkOutProject"
        },
        {
          "group": "inline",
          "when": "view == repositoryTree && viewItem == architectureRoot",
          "command": "vscodeObs.obsRepository.addArchitecturesToRepo"
        },
        {
          "group": "inline",
          "when": "view == repositoryTree && viewItem == architecture",
          "command": "vscodeObs.obsRepository.removeArchitectureFromRepo"
        },
        {
          "group": "inline",
          "when": "view == repositoryTree && viewItem == repositoryRoot",
          "command": "vscodeObs.obsRepository.removeRepository"
        },
        {
          "group": "inline",
          "when": "view == repositoryTree && viewItem == pathRoot",
          "command": "vscodeObs.obsRepository.addPathToRepo"
        },
        {
          "group": "inline",
          "when": "view == repositoryTree && viewItem =~ /(imm|upDownM|upM|downM)ovableRepositoryPath/",
          "command": "vscodeObs.obsRepository.removePathFromRepo"
        },
        {
          "group": "inline",
          "when": "view == repositoryTree && viewItem =~ /(upDownM|upM)ovableRepositoryPath/",
          "command": "vscodeObs.obsRepository.movePathUp"
        },
        {
          "group": "inline",
          "when": "view == repositoryTree && viewItem =~ /(upDownM|downM)ovableRepositoryPath/",
          "command": "vscodeObs.obsRepository.movePathDown"
        }
      ],
      "editor/title": [
        {
          "group": "navigation",
          "command": "vscodeObs.obsProject.checkOutPackage",
          "when": "resourceScheme == vscodeObsPackageFile"
        }
      ],
      "view/title": [
        {
          "group": "navigation",
          "when": "view == repositoryTree",
          "command": "vscodeObs.obsRepository.addRepositoryFromDistro"
        }
      ],
      "scm/title": [
        {
          "command": "vscodeObs.obsScm.commitChanges",
          "when": "scmProvider == obs",
          "group": "inline"
        },
        {
          "command": "vscodeObs.obsScm.addChangelogEntry",
          "when": "scmProvider == obs",
          "group": "inline"
        }
      ],
      "scm/change/title": [
        {
          "command": "vscodeObs.obsScm.revertChange"
        }
      ],
      "scm/resourceState/context": [
        {
          "command": "vscodeObs.obsScm.showDiff",
          "when": "scmProvider == obs && scmResourceGroup == changes",
          "group": "inline"
        },
        {
          "command": "vscodeObs.obsScm.discardChanges",
          "when": "scmProvider == obs && scmResourceGroup != unmodified",
          "group": "inline"
        },
        {
          "command": "vscodeObs.obsScm.addFile",
          "when": "scmProvider == obs && scmResourceGroup == untracked",
          "group": "inline"
        },
        {
          "command": "vscodeObs.obsScm.removeFile",
          "when": "scmProvider == obs && scmResourceGroup == changes",
          "group": "inline"
        },
        {
          "command": "vscodeObs.obsScm.removeFile",
          "when": "scmProvider == obs && scmResourceGroup == unmodified",
          "group": "inline"
        }
      ]
    },
    "commands": [
      {
        "title": "Import accounts from osc's configuration file",
        "command": "vscodeObs.obsAccount.importAccountsFromOsrc"
      },
      {
        "title": "Set the password of a Build Service Account",
        "command": "vscodeObs.obsAccount.setAccountPassword"
      },
      {
        "icon": "$(remove)",
        "title": "Remove an account from the settings",
        "command": "vscodeObs.obsAccount.removeAccount"
      },
      {
        "title": "Add an existing account from the Open Build Service to the extension",
        "command": "vscodeObs.obsAccount.newAccountWizard"
      },
      {
        "icon": "$(add)",
        "title": "Add architectures to a repository",
        "command": "vscodeObs.obsRepository.addArchitecturesToRepo"
      },
      {
        "icon": "$(remove)",
        "title": "Remove this architecture from the repository",
        "command": "vscodeObs.obsRepository.removeArchitectureFromRepo"
      },
      {
        "icon": "$(add)",
        "title": "Add a path from a Project to a repository",
        "command": "vscodeObs.obsRepository.addPathToRepo"
      },
      {
        "icon": "$(remove)",
        "title": "Remove this path from the repository",
        "command": "vscodeObs.obsRepository.removePathFromRepo"
      },
      {
        "icon": "$(arrow-up)",
        "title": "Move this path up",
        "command": "vscodeObs.obsRepository.movePathUp"
      },
      {
        "icon": "$(arrow-down)",
        "title": "Move this path down",
        "command": "vscodeObs.obsRepository.movePathDown"
      },
      {
        "icon": "$(close)",
        "title": "Remove this repository",
        "command": "vscodeObs.obsRepository.removeRepository"
      },
      {
        "icon": "$(add)",
        "title": "Add a repository from a Distribution",
        "command": "vscodeObs.obsRepository.addRepositoryFromDistro"
      },
      {
        "icon": "$(remove)",
        "title": "Remove this Bookmark",
        "command": "vscodeObs.obsProject.removeBookmark"
      },
      {
        "icon": "$(add)",
        "title": "Bookmark a project from the Open Build Service",
        "command": "vscodeObs.obsProject.bookmarkProject"
      },
      {
        "icon": "$(refresh)",
        "title": "Update this Project",
        "command": "vscodeObs.obsProject.updateProject"
      },
      {
        "icon": {
          "dark": "media/dark/branch.svg",
          "light": "media/light/branch.svg"
        },
        "title": "Branch, bookmark and checkout this package",
        "command": "vscodeObs.obsProject.branchAndBookmarkAndCheckoutPackage"
      },
      {
        "icon": "$(git-pull-request)",
        "title": "Submit package",
        "command": "vscodeObs.obsProject.submitPackage"
      },
      {
        "icon": "$(refresh)",
        "title": "Update this Project",
        "command": "vscodeObs.obsProject.updateCheckedOutProject"
      },
      {
        "icon": "$(refresh)",
        "title": "Update this Package and its contents",
        "command": "vscodeObs.obsProject.updatePackage"
      },
      {
        "icon": "$(repo-clone)",
        "title": "Check out the project",
        "command": "vscodeObs.obsProject.checkOutProject"
      },
      {
        "icon": "$(repo-clone)",
        "title": "Check out the package",
        "command": "vscodeObs.obsProject.checkOutPackage"
      },
      {
        "command": "vscodeObs.obsScm.revertChange",
        "title": "Revert this change",
        "icon": "$(discard)",
        "when": "scmProvider == obs"
      },
      {
        "command": "vscodeObs.obsScm.commitChanges",
        "title": "Commit the current changes",
        "icon": "$(check)",
        "when": "scmProvider == obs"
      },
      {
        "command": "vscodeObs.obsScm.addChangelogEntry",
        "title": "Add an entry to the changelog",
        "icon": "$(check)",
        "when": "scmProvider == obs"
      },
      {
        "command": "vscodeObs.obsScm.showDiff",
        "title": "Show the differences to the last commit",
        "icon": "$(git-compare)",
        "when": "scmProvider == obs"
      },
      {
        "command": "vscodeObs.obsScm.addFile",
        "title": "Add this file",
        "icon": "$(add)",
        "when": "scmProvider == obs"
      },
      {
        "command": "vscodeObs.obsScm.removeFile",
        "title": "Remove this file",
        "icon": "$(remove)",
        "when": "scmProvider == obs"
      },
      {
        "command": "vscodeObs.obsScm.discardChanges",
        "title": "Discard Changes",
        "icon": "$(discard)",
        "when": "scmProvider == obs"
      }
    ],
    "views": {
      "obs-tree-view": [
        {
          "name": "Bookmarked Projects",
          "id": "bookmarkedProjectsTree"
        },
        {
          "name": "Current Project",
          "id": "currentProjectTree"
        },
        {
          "name": "Repositories",
          "id": "repositoryTree"
        }
      ],
      "scm": [
        {
          "name": "Package History",
          "id": "packageScmHistoryTree"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "icon": "media/dark/obs-line-dark.svg",
          "title": "Open Build Service Project",
          "id": "obs-tree-view"
        }
      ]
    },
    "configuration": {
      "properties": {
        "vscode-obs.logLevel": {
          "default": "error",
          "enum": ["trace", "debug", "info", "warn", "error", "fatal"],
          "description": "Logging level used",
          "type": "string"
        },
        "vscode-obs.checkUnimportedAccounts": {
          "scope": "application",
          "default": true,
          "description": "Specify whether the extension will check for accounts in your .oscrc that have not been imported into VSCode",
          "type": "boolean"
        },
        "vscode-obs.forceHttps": {
          "scope": "application",
          "default": true,
          "description": "Define whether URLs to the Buildservice must use https, or whether http is permitted as well",
          "type": "boolean"
        },
        "vscode-obs.accounts": {
          "description": "Accounts for instances of the Open Build Service",
          "default": [],
          "scope": "application",
          "items": {
            "required": ["accountName", "username", "apiUrl"],
            "additionalProperties": false,
            "properties": {
              "email": {
                "type": "string",
                "description": "Your email address, that will be added to changelogs"
              },
              "realname": {
                "type": "string",
                "description": "Your real name, which will be added to changelogs"
              },
              "username": {
                "type": "string",
                "description": "Username on the Open Build Service instance"
              },
              "apiUrl": {
                "type": "string",
                "description": "URL to the API of this instance of the Open Build Service. Note that this is **not** the URL to the web UI, but often https://api.MYINSTANCE.org/."
              },
              "accountName": {
                "description": "A name (memorable) for this account",
                "type": "string"
              },
              "serverCaCertificate": {
                "description": "CA certificate of the server, if it has a custom certificate unknown to VSCode.",
                "type": "string"
              }
            },
            "description": "An account for an instance of the Open Build Service",
            "type": "object"
          },
          "type": "array"
        }
      },
      "title": "Open Build Service"
    },
    "taskDefinitions": [
      {
        "type": "osc",
        "required": ["repository", "arch", "pkgPath"],
        "properties": {
          "repository": {
            "type": "string",
            "description": "The name of the repository to build the package for"
          },
          "arch": {
            "type": "string",
            "enum": [
              "aarch64",
              "aarch64_ilp32",
              "armv4l",
              "armv5l",
              "armv6l",
              "armv7l",
              "armv5el",
              "armv6el",
              "armv7el",
              "armv7hl",
              "armv8el",
              "hppa",
              "m68k",
              "i386",
              "i486",
              "i586",
              "i686",
              "athlon",
              "ia64",
              "k1om",
              "mips",
              "mipsel",
              "mips32",
              "mips64",
              "mips64el",
              "ppc",
              "ppc64",
              "ppc64p7",
              "ppc64le",
              "riscv64",
              "s390",
              "s390x",
              "sh4",
              "sparc",
              "sparc64",
              "sparc64v",
              "sparcv8",
              "sparcv9",
              "sparcv9v",
              "x86_64"
            ],
            "default": "x86_64",
            "description": "The architecture for which the package should be build"
          },
          "pkgPath": {
            "type": "string",
            "description": "The path to the packages' root directory"
          },
          "cleanBuildRoot": {
            "type": "boolean",
            "default": true,
            "description": "Whether osc should clean the buildroot before each new build (defaults to true)"
          },
          "extraOscArgs": {
            "type": "array",
            "default": [],
            "items": {
              "type": "string"
            },
            "description": "An array of additional command line options that can be passed to 'osc build'"
          },
          "oscBinaryPath": {
            "type": "string",
            "description": "Path to the osc binary. It will be automatically discovered by default."
          }
        }
      }
    ]
  },
  "main": "./dist/extension",
  "activationEvents": [
    "onView:bookmarkedProjectsTree",
    "onView:currentProjectTree",
    "onView:repositoryTree",
    "workspaceContains:**/.osc",
    "workspaceContains:**/.osc_obs_ts"
  ],
  "categories": ["SCM Providers", "Other"],
  "engines": {
    "vscode": "^1.40.0"
  },
  "prettier": {
    "trailingComma": "none"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/SUSE/open-build-service-connector"
  },
  "license": "MIT",
  "publisher": "SUSE",
  "version": "0.0.5",
  "description": "Connector to the Open Build Service",
  "displayName": "Open Build Service Connector",
  "name": "open-build-service-connector",
  "icon": "media/obs-logo_meta.png",
  "galleryBanner": {
    "color": "#6da741",
    "theme": "light"
  },
  "homepage": "https://github.com/SUSE/open-build-service-connector/blob/master/README.md",
  "bugs": {
    "url": "https://github.com/SUSE/open-build-service-connector/issues"
  },
  "preview": true
}
