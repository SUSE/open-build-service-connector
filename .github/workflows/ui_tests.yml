name: UI_tests

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: [10.x, 12.x, 13.x, 14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          node_modules/*
        key: ${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ matrix.node-version }}-yarn-

    - run: yarn install || yarn install || yarn install
    - name: install xvfb
      run: |
        sudo apt-get -y update
        sudo apt-get -y install xvfb meson ninja-build libsecret-1-dev libglib2.0-dev

    - uses: actions/cache@v2
      with:
        path: open-build-service/*
        key: open-build-service
        restore-keys: |
          open-build-service
    - run: ./start-mini-obs.sh

    - name: run the UI tests
      run: |
        /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        for VER in "1.40.0" "1.40.1" "1.41.0" "1.41.1" "1.42.0" "1.42.1" "1.43.0" "1.43.1" "1.43.2" "1.44.0" "1.44.1" "1.44.2" "1.45.0" "1.45.1" "1.46.0" "insiders"; do
          export VSCODE_VERSION=${VER}
          yarn run test:ui
        done
      env:
        DISPLAY: ':99.0'

    - name: create an archive of the logfiles and screenshots
      run: find test-resources/ \( -name *png -o -name *log \) | tar -cvf logs-${{ matrix.node-version }}.tar -T -
      if: failure()

    - name: upload the archive of the logfiles and screenshots
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: logs-${{ matrix.node-version }}
        path: logs-${{ matrix.node-version }}.tar
